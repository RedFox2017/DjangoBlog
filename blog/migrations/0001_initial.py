# Generated by Django 2.1.5 on 2019-10-28 10:11

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthorInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('au_name', models.CharField(max_length=48, unique=True, verbose_name='作者')),
                ('au_id', models.CharField(blank=True, max_length=24)),
                ('au_password', models.CharField(max_length=48, verbose_name='密码')),
                ('au_email', models.CharField(max_length=100, unique=True, verbose_name='邮箱')),
            ],
            options={
                'db_table': 'author_info',
            },
        ),
        migrations.CreateModel(
            name='BlogInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('b_title', models.CharField(max_length=128, verbose_name='博客标题')),
                ('b_introduction', models.CharField(max_length=100)),
                ('b_content', models.TextField()),
                ('b_pub_date', models.DateField(auto_now_add=True)),
                ('b_upd_date', models.DateField(auto_now=True)),
                ('b_pic', models.ImageField(upload_to='blog')),
                ('b_author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.AuthorInfo')),
            ],
            options={
                'db_table': 'blog_info',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='BlogPicInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('p_address', models.ImageField(upload_to='blog')),
            ],
        ),
        migrations.CreateModel(
            name='CategoryInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('c_name', models.CharField(max_length=20, unique=True)),
                ('c_blog_num', models.IntegerField()),
                ('c_blog', models.ManyToManyField(to='blog.BlogInfo')),
            ],
            options={
                'db_table': 'category_info',
            },
        ),
    ]
